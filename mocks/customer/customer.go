// Code generated by MockGen. DO NOT EDIT.
// Source: internal/model/customer/customer.go

// Package mock_customer is a generated GoMock package.
package mock_customer

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCustomerI is a mock of CustomerI interface.
type MockCustomerI struct {
	ctrl     *gomock.Controller
	recorder *MockCustomerIMockRecorder
}

// MockCustomerIMockRecorder is the mock recorder for MockCustomerI.
type MockCustomerIMockRecorder struct {
	mock *MockCustomerI
}

// NewMockCustomerI creates a new mock instance.
func NewMockCustomerI(ctrl *gomock.Controller) *MockCustomerI {
	mock := &MockCustomerI{ctrl: ctrl}
	mock.recorder = &MockCustomerIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomerI) EXPECT() *MockCustomerIMockRecorder {
	return m.recorder
}

// GetDetails mocks base method.
func (m *MockCustomerI) GetDetails() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetDetails")
}

// GetDetails indicates an expected call of GetDetails.
func (mr *MockCustomerIMockRecorder) GetDetails() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDetails", reflect.TypeOf((*MockCustomerI)(nil).GetDetails))
}
